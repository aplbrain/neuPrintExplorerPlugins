{"version":3,"sources":["../src/miniroiheatmap.jsx"],"names":["viridisColorMap","colormap","nshades","format","alpha","RoiHeatMap","roiInfoObject","roiInfoObjectKey","sumOfValues","listOfRoisToUse","type","total","Math","max","map","roi","percent","floor","round","HeatMapLabels","roiList","styles","margin","width","height","overflow","display","flexDirection","whiteSpace","transform","transformOrigin","fontSize","ColorLegend","color","index","key","divStyles","backgroundColor","preTotal","postTotal","text","hmPost","hmPre"],"mappings":"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","sourcesContent":["import React from 'react';\nimport colormap from 'colormap';\nimport ColorBox from '@neuprint/colorbox';\n\nconst viridisColorMap = colormap({\n  colormap: 'viridis',\n  nshades: 101,\n  format: 'hex',\n  alpha: 1\n});\n\nexport function RoiHeatMap({ roiInfoObject, roiInfoObjectKey, sumOfValues, listOfRoisToUse }) {\n  const type = roiInfoObjectKey;\n  const total = Math.max(sumOfValues, 0.01);\n\n  return listOfRoisToUse.map(roi => {\n    const percent = roiInfoObject[roi] ? ((roiInfoObject[roi][type] * 1.0) / total) * 100 : 0;\n    return (\n      <ColorBox\n        margin={0}\n        width={10}\n        height={20}\n        backgroundColor={\n          roiInfoObject[roi]\n            ? viridisColorMap[Math.floor(((roiInfoObject[roi][type] * 1.0) / total) * 100)]\n            : viridisColorMap[0]\n        }\n        key={roi}\n        title={`${roi} ${Math.round(percent * 100) / 100}%`}\n        text=\"\"\n      />\n    );\n  });\n}\n\nexport function HeatMapLabels({ roiList }) {\n  const styles = {\n    margin: '0px',\n    width: '10px',\n    height: '40px',\n    overflow: 'visible',\n    display: 'inline-flex',\n    flexDirection: 'row',\n    whiteSpace: 'nowrap',\n    transform: 'rotate(-90deg) translateX(-40px)',\n    transformOrigin: 'left top 0',\n    fontSize: '10px'\n  };\n  return roiList.map(roi => (\n    <div title={roi} style={styles} key={roi}>\n      {roi}\n    </div>\n  ));\n}\n\nexport function ColorLegend() {\n  const styles = {\n    display: 'inline-flex',\n    overflow: 'visible',\n    flexDirection: 'row'\n  };\n\n  return (\n    <div style={styles}>\n      {'0% '}{' '}\n      {viridisColorMap.map((color, index) => {\n        const key = `${color}${index}`;\n        const divStyles = {\n          margin: '0px',\n          width: '1px',\n          height: '10px',\n          backgroundColor: color\n        };\n        return <div key={key} style={divStyles} />;\n      })}\n      {' 100%'}\n    </div>\n  );\n}\n\nexport default ({ roiList, roiInfoObject, preTotal, postTotal }) => {\n  const styles = {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '5px'\n  };\n\n  const text = (\n    <div key=\"labels\" style={styles}>\n      <HeatMapLabels roiList={roiList} />\n    </div>\n  );\n  const hmPost = (\n    <div key=\"post\" style={styles}>\n      <RoiHeatMap\n        listOfRoisToUse={roiList}\n        roiInfoObject={roiInfoObject}\n        roiInfoObjectKey=\"post\"\n        sumOfValues={postTotal}\n      />\n      inputs*\n    </div>\n  );\n  const hmPre = (\n    <div key=\"pre\" style={styles}>\n      <RoiHeatMap\n        listOfRoisToUse={roiList}\n        roiInfoObject={roiInfoObject}\n        roiInfoObjectKey=\"pre\"\n        sumOfValues={preTotal}\n      />\n      outputs*\n    </div>\n  );\n  return [text, hmPost, hmPre];\n};\n"],"file":"miniroiheatmap.js"}